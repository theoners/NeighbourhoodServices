@using NeighbourhoodServices.Common
@using NeighbourhoodServices.Data.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

    <ul class="navbar-nav">
        @if (this.SignInManager.IsSignedIn(this.User))
        {
            <li class="nav-item cta cta-colored">
                <a class="nav-link" asp-controller="Announcements" asp-action="GetCreateView">Публикувай Обява</a>
            </li>
            <li class="nav-item cta">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Профил">@(this.User.Identity.Name)</a>
            </li>

            <li class="nav-item cta cta-colored">
                <form class="nav-item" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@(this.Url.Action("Index", "Home", new { area = string.Empty }))">
                    <button type="submit" class="btn-danger">Изход</button>
                </form>
            </li>
            if (!this.User.IsInRole(GlobalConstants.AdministratorRoleName))
            {
                <li class="nav-item cta cta-colored">
                    <a class="nav-link" asp-area="Administration" asp-controller="Dashboard" asp-action="Index" title="Админ">Админ</a>
                </li>
            }
        }
        else
        {
            <li class="nav-item cta cta-colored">
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Влез/Регистрирай се</a>
            </li>

        }
    </ul>





